version: '3.8'

services:
  webserver:
    image: nginx
    environment:
      NGINX_ENVSUBST_OUTPUT_DIR: /etc/nginx
      RESOURCES_ROOT_PATH: &resources_root_path_ ${RESOURCES_ROOT_PATH:-/resources/}
      RESOURCES_ROOT_URI: &resources_root_uri_ ${RESOURCES_ROOT_URI:-/resources/}
      BACKEND_PORT: ${BACKEND_PORT:-8080}
    volumes:
      # - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./nginx.conf:/etc/nginx/templates/nginx.conf.template
      - ./target/html/:/var/www/html
    ports:
    - "80:80"
    restart: always

  db:
    image: postgres
    environment:
      POSTGRES_USER: &db_user ${DATABASE_USER:-admin}
      PGUSER: *db_user
      POSTGRES_PASSWORD: &db_password ${DATABASE_PASSWORD:-admin}
      POSTGRES_DB: &db_database ${DATABASE_NAME:-postgres}
      PGDATABASE: *db_database
    volumes:
    - ${DATABASE_VOLUME:-./database-data}:/var/lib/postgresql/data
    ports:
    - "${DATABASE_PORT:-5432}:5432"
    command: postgres -c listen_addresses='*' 
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 0s


  backend:
    image: eclipse-temurin:17
    volumes:
      - ./target/api.jar:/api.jar
      - ./target/application.yml:/application.yml
      - ./target/resources:/root/resources
    environment:
      DATABASE_HOST: db
      DATABASE_PORT: ${DATABASE_PORT:-5432}
      DATABASE_USER: *db_user
      DATABASE_PASSWORD: *db_password
      SMTP_USERNAME: ${SMTP_USERNAME}
      SMTP_PASSWORD: ${SMTP_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
    command: "java -jar api.jar --spring.config.location=file:///application.yml"
    ports:
      - "${BACKEND_PORT:-8080}:8080"
    depends_on:
      db:
        condition: service_healthy
    restart: always